@{
    ViewBag.Title = "Index";
}

<style>
    .itemscls {
        margin-top: 40px;
        margin-bottom: 40px;
    }

    .iconwidth {
        width: 16px;
        height: 16px;
        margin: 1px;
        display: inline-block;
    }
</style>
<script src="../../../../Scripts/Ext/treeCombo.js"></script>
<script type="text/javascript">
    var iconCombox = new Ext.form.ComboBox({
        fieldLabel: '图标',
        store: new Ext.data.JsonStore({
            url: '/Api/Menu/GetMenuIcon?path=' + "@Server.UrlEncode(Server.MapPath(Com.XXXX.Common.ConstHelper.IconPath))",
            storeId: 'myStore',
            autoDestroy: true,
            idProperty: 'name',
            fields: ['name'],
        }),
        tpl: '<tpl for="."><span class="iconwidth  {name}" value="{name}" onclick="seticon(this)">&nbsp;&nbsp;</span></tpl>',
        //tpl: '<tpl for="."><div x-combo-list-item :qtip="{url}" class="x-combo-list-item"><img src="{url}" width="16px" height="16px">&nbsp;{name}</div></tpl>',
        //tpl :'<table><tr><tpl for="."><td class="x-combo-list-item"><img width=16 height=16 src="{url}" /></td><tpl if="xindex % 3 === 0"></tr><tr></tpl></tpl></tr></table>',
        triggerAction: 'all',
        emptyText: '请选择图标...',
        name: 'iconCls',
        width: 300,
    });

    function seticon(span) {
        var type = Ext.get(span).dom.attributes.value.value;
        iconCombox.setValue(type);
        Ext.getCmp("iconimage").addClass(type);
        console.log(Ext.getCmp("iconimage"));
    }

    var form1 = new Ext.FormPanel({
        buttonAlign: 'center',
        id: "orgform",
        labelAlign: "right",
        plain: true,
        anchor: '100% 100%',
        layout: "anchor",
        frame: true,
        reader: new Ext.data.JsonReader(
         { successProperty: 'success', root: 'message' },
         ['ID', 'Name', 'OrgType', 'InUse', 'POrganizationID', 'iconCls', 'Remark', 'Sort', 'ChargeLeaderIDs', 'ChargeLeaderNames', 'LeaderIDs', 'LeaderNames']
        ),
        defaults: { margins: '0 5 0 0' },
        title: "组织机构信息",
        items: [
            {
                xtype: 'fieldset',
                collapsible: false,
                anchor: '100% 100%',
                items: [{
                    xtype: "hidden",
                    name: "POrganizationID",
                    id: 'orgpid'
                }, {
                    xtype: "hidden",
                    name: "ID",
                    id: 'orgid'
                }, {
                    fieldLabel: '名称',
                    name: 'Name',
                    xtype: 'textfield',
                    width: 300
                }, {
                    fieldLabel: '类型',
                    name: 'OrgType',
                    hiddenName: 'OrgType',
                    xtype: 'combo',
                    //本地数据源  local/remote
                    mode: 'remote',
                    //设置为选项的text的字段
                    displayField: "Name",
                    //设置为选项的value的字段 
                    valueField: "Id",
                    //是否可以输入，还是只能选择下拉框中的选项
                    editable: false,
                    typeAhead: true,
                    //必须选择一项
                    forceSelection: true,
                    //输入部分选项内容匹配的时候显示所有的选项
                    triggerAction: 'all',
                    displayField: "Name",
                    //设置为选项的value的字段 
                    valueField: "Id",
                    //数据
                    store: new Ext.data.JsonStore({
                        autoLoad: true,
                        method: 'Post',
                        idProperty: 'ID',
                        url: "/Api/Dictionary/GetDictionaryByPCode?pcode=OrgType",
                        fields: [{
                            name: 'Name',
                            mapping: 'Title'
                        }, {
                            name: 'Id',
                            mapping: 'Value'
                        }]
                    }),
                    width: 300
                }, {

                    fieldLabel: '状态',
                    name: 'InUse',
                    hiddenName: 'InUse',
                    xtype: 'combo',
                    //本地数据源  local/remote
                    mode: 'local',
                    //设置为选项的text的字段
                    displayField: "Name",
                    //设置为选项的value的字段 
                    valueField: "Id",
                    //是否可以输入，还是只能选择下拉框中的选项
                    editable: false,
                    typeAhead: true,
                    //必须选择一项
                    emptyText: '请选择...',
                    forceSelection: true,
                    //输入部分选项内容匹配的时候显示所有的选项
                    triggerAction: 'all',
                    displayField: "Name",
                    //设置为选项的value的字段 
                    valueField: "Id",
                    //数据
                    store: new Ext.data.JsonStore({
                        autoLoad: true,
                        method: 'Post',
                        idProperty: 'ID',
                        url: "/Api/Dictionary/GetDictionaryByPCode?pcode=Status",
                        fields: [{
                            name: 'Name',
                            mapping: 'Title'
                        }, {
                            name: 'Id',
                            mapping: 'Value'
                        }]
                       
                    }),
                    width: 300

                   
                }, new Ext.form.ComboBoxTree({
                    id: 'ChargeLeaderIDs',
                    mode: "local",
                    fieldLabel: "分管领导",
                    //hiddenName: "ChargeLeaderIDs",
                    name: "ChargeLeader",
                    url: "/Api/Organization/GetOrganizationsUserComboBox",
                    selectNodeModel: "leaf",
                    displayField: "TEXT",
                    valueField: "VALUE",
                    parentField: "PID",
                    rootValue: "00000000-0000-0000-0000-000000000000",
                    width: 220,
                    dataRoot: "msg",
                    resizable: true,
                    checkedType: "user",
                    store: new Ext.data.JsonStore({
                        autoLoad: true,
                        root: "msg",
                        url: "/Api/Organization/GetOrganizationsUserComboBox",
                        fields: [
                            { name: "TEXT" },
                            { name: "VALUE" },
                            { name: "PID" },
                            { name: "Type" } //要过滤的节点类型
                        ]
                    })
                }),
                 new Ext.form.ComboBoxTree({
                     id: 'LeaderIDs',
                     mode: "local",
                     fieldLabel: "部门/岗位领导",
                     //hiddenName: "ChargeLeaderIDs",
                     name: "Leader",
                     url: "/Api/Organization/GetOrganizationsUserComboBox",
                     selectNodeModel: "leaf",
                     displayField: "TEXT",
                     valueField: "VALUE",
                     parentField: "PID",
                     rootValue: "00000000-0000-0000-0000-000000000000",
                     width: 220,
                     dataRoot: "msg",
                     resizable: true,
                     checkedType: "user",
                     store: new Ext.data.JsonStore({
                         autoLoad: true,
                         root: "msg",
                         url: "/Api/Organization/GetOrganizationsUserComboBox",
                         fields: [
                             { name: "TEXT" },
                             { name: "VALUE" },
                             { name: "PID" },
                             { name: "Type" } //要过滤的节点类型
                         ]
                     })
                 }),
                {
                    xtype: 'compositefield',
                    fieldLabel: '图标',
                    items: [
                      iconCombox,
                        { xtype: 'displayfield', id: "iconimage" },
                    ]
                }, {
                    fieldLabel: '备注',
                    xtype: 'textarea',
                    name: "Remark",
                    height: 150,
                    anchor: '95%'
                }
                ]
            }
        ], buttons: [{
            xtype: "button",
            text: "添加单位/部门/岗位",
            id: "addorgbtn",
            style: "float:right",
            handler: function () {
                form1.show();
                form1.getForm().reset();
                form2.hide();
                form2.getForm().reset();
                Ext.getCmp("panel1").doLayout();
                var orgpid = Ext.getCmp("orgid").getValue();
                form1.form.reset();
                if (orgpid) {
                    Ext.getCmp("orgpid").setValue(orgpid);
                }
            }
        }, {
            xtype: "button",
            text: "移动",
            id: "moveorgbtn",
            style: "float:right",
            handler: function () {
                Ext.getCmp("orgtree").root.reload()
            }
        }, {
            xtype: "button",
            text: "增加人员",
            id: "adduserbtn",
            style: "float:right",
            handler: function () {
                form2.show();
                form2.form.reset();
                form1.hide();
                Ext.getCmp("panel1").doLayout();
                var orgpid = Ext.getCmp("orgid").getValue();
                if (orgpid) {
                    Ext.getCmp("organizationid").setValue(orgpid);
                }
            }
        }, {
            xtype: "button",
            text: "保存",
            style: "float:right",
            id: "saveorgbtn",
            handler: function () {
                var orgid = Ext.getCmp("orgid").getValue();
                var type = orgid ? "Put" : "Post";
                if (form1.getForm().isValid()) {
                    form1.getForm().submit({
                        url: '/Api/Organization/' + orgid,
                        method: type,
                        params: {
                            ChargeLeaderIDs: Ext.getCmp("ChargeLeaderIDs").getCheckedValue(),
                            ChargeLeaderNames: Ext.getCmp("ChargeLeaderIDs").getCheckedDisplay(),
                            LeaderNames: Ext.getCmp("LeaderIDs").getCheckedDisplay(),
                            LeaderIDs: Ext.getCmp("LeaderIDs").getCheckedValue()
                        },
                        waitTitle: '请等待',
                        waitMsg: '正在提交中',
                        success: function (form, action) {
                            Ext.getCmp("orgtree").root.reload()
                            Ext.Msg.alert('提示', action.result.message);
                        },
                        failure: function (form, action) {
                            Ext.Msg.alert('提示', action.result.message);
                        }
                    });
                }
            }
        }, {
            xtype: "button",
            text: "返回",
            id: "returnorgbtn",
            style: "float:right",
            handler: function () {
                form1.show();
                form2.hide();
                Ext.getCmp("panel1").doLayout();
                var id = Ext.getCmp("orgpid").getValue();
                form1.form.load({
                    url: '@Url.Content("/Api/Organization/GetForm/")' + id,
                    method: "Get",
                    waitMsg: 'Loading',
                    success: function (form, response) {
                    }
                });
            }
        }, {
            xtype: "button",
            text: "删除",
            id: "removeorgbtn",
            style: "float:right",
            handler: function () {
                form1.show();
                form2.hide();
                Ext.getCmp("panel1").doLayout();
                var id = Ext.getCmp("orgid").getValue();
                form1.form.submit({
                    url: '@Url.Content("/Api/Organization/")' + id,
                    method: "Delete",
                    waitMsg: 'Loading',
                    success: function (form, action) {
                        Ext.getCmp("orgtree").root.reload()
                        Ext.Msg.alert('提示', action.result.message);
                    }
                });
            }
        }, {
            xtype: "button",
            text: "重置",
            id: "resetorgbtn",
            style: "float:right",
            handler: function () {
                form1.show();
                form2.hide();
                form1.form.reset();
            }
        }]
    });
    var form2 = new Ext.FormPanel({
        buttonAlign: 'center',
        id: "userform",
        defaults: { margins: '0 5 0 0' },
        anchor: '100% 100%',
        layout: "anchor",
        plain: true,
        hidden: true,
        frame: true,
        reader: new Ext.data.JsonReader(
         { successProperty: 'success', root: 'message' },
         ["OrganizationID", "ID", 'RealName', 'UserName', 'OfferTime', 'Education', 'IsMarry', 'Professional', 'InUse', 'BirthDay', 'Remark', "PassWord"]
        ),
        labelAlign: "right",
        title: "用户信息",
        hidden: true,
        items: [{
            xtype: 'fieldset',
            collapsible: false,
            anchor: '100% 100%',
            labelWidth: 75,
            items: [
                {
                    name: 'OrganizationID',
                    xtype: 'hidden',
                    id: "organizationid"
                }, {
                    name: 'ID',
                    xtype: 'hidden',
                    id: "userid"
                }, {
                    fieldLabel: '真实姓名',
                    name: 'RealName',
                    xtype: 'textfield',
                    width: 300

                }, {
                    fieldLabel: '用户名',
                    xtype: 'textfield',
                    name: "UserName",

                    width: 300
                }, {
                    fieldLabel: '密码',
                    xtype: 'textfield',
                    name: "PassWord",
                    width: 300
                }, {
                    fieldLabel: '入职时间',
                    xtype: 'datefield',
                    name: "OfferTime",
                    format: 'Y-m-d',
                    width: 300
                }, {
                    fieldLabel: '学历',
                    name: 'Education',
                    hiddenName: 'Education',
                    xtype: 'combo',
                    mode: 'remote',
                    editable: false,
                    typeAhead: true,
                    forceSelection: true,
                    triggerAction: 'all',
                    displayField: "Name",
                    valueField: "Id",
                    store: new Ext.data.JsonStore({
                        autoLoad: true,
                        method: 'Post',
                        idProperty: 'ID',
                        url: "/Api/Dictionary/GetDictionaryByPCode?pcode=Education",
                        fields: [{
                            name: 'Name',
                            mapping: 'Title'
                        }, {
                            name: 'Id',
                            mapping: 'Value'
                        }]
                    }),
                    width: 300

                }, {
                    fieldLabel: '婚否',
                    name: 'IsMarry',
                    hiddenName: 'IsMarry',
                    xtype: 'combo',
                    mode: 'remote',
                    editable: false,
                    typeAhead: true,
                    forceSelection: true,
                    triggerAction: 'all',
                    displayField: "Name",
                    valueField: "Id",
                    autoLoad: true,
                    store: new Ext.data.JsonStore({
                        autoLoad: true,
                        method: 'Post',
                        idProperty: 'ID',
                        url: "/Api/Dictionary/GetDictionaryByPCode?pcode=IsNot",
                        fields: [{
                            name: 'Name',
                            mapping: 'Title'
                        }, {
                            name: 'Id',
                            mapping: 'Value'
                        }]
                    }),
                    width: 300

                }, {
                    fieldLabel: '专业',
                    xtype: 'textfield',
                    name: "Professional",
                    width: 300
                }, {
                    fieldLabel: '启用',
                    name: 'InUse',
                    hiddenName: 'InUse',
                    xtype: 'combo',
                    mode: 'remote',
                    editable: false,
                    typeAhead: true,
                    forceSelection: true,
                    blankText : '请选择',
                    triggerAction: 'all',
                    displayField: "Name",
                    valueField: "Id",
                    store: new Ext.data.JsonStore({
                        autoLoad: true, 
                        method: 'Post',
                        idProperty: 'ID',
                        url: "/Api/Dictionary/GetDictionaryByPCode?pcode=Status",
                        fields: [{
                            name: 'Name',
                            mapping: 'Title'
                        }, {
                            name: 'Id',
                            mapping: 'Value'
                        }]
                    }),
                    width: 300
                }, {
                    fieldLabel: '生日',
                    xtype: 'datefield',
                    name: "BirthDay",
                    format: 'Y-m-d',
                    width: 300

                }, {
                    fieldLabel: '备注',
                    xtype: 'textarea',
                    name: "Remark",
                    height: 150,
                    anchor: '95%'
                }
            ]
        }

        ], buttons: [{
            xtype: "button",
            text: "保存用户",
            style: "float:right",
            handler: function () {
                var userid = Ext.getCmp("userid").getValue();
                var type = userid ? "Put" : "Post";
                if (form2.getForm().isValid()) {
                    form2.getForm().submit({
                        url: '/Api/User/' + userid,
                        method: type,
                        waitTitle: '请等待',
                        waitMsg: '正在提交中',
                        success: function (form, action) {
                            Ext.getCmp("orgtree").root.reload()
                            Ext.Msg.alert('提示', action.result.message);
                        },
                        failure: function (form, action) {
                            Ext.Msg.alert('提示', action.result.message);
                        }
                    });

                }
            }
        }, {
            xtype: "button",
            text: "返回",
            style: "float:right",
            handler: function () {
                form1.show();
                form2.hide();
                Ext.getCmp("panel1").doLayout();
                var id = Ext.getCmp("orgpid").getValue();
                form1.form.load({
                    url: '@Url.Content("/Api/Organization/GetForm/")' + id,
                    method: "Get",
                    waitMsg: 'Loading',
                    success: function (form, response) {

                    }
                });
            }

        }, {
            xtype: "button",
            text: "删除",
            style: "float:right",
            handler: function () {
                form1.show();
                form2.hide();
                Ext.getCmp("panel1").doLayout();
                var id = Ext.getCmp("userid").getValue();
                form1.form.submit({
                    url: '@Url.Content("/Api/User/")' + id,
                    method: "Delete",
                    waitMsg: 'Loading',
                    success: function (form, action) {
                        Ext.getCmp("orgtree").root.reload()
                        Ext.Msg.alert('提示', action.result.message);
                    }
                });
            }

        }]
    });


    Ext.onReady(function () {
        Ext.QuickTips.init();
        Ext.form.Field.prototype.msgTarget = 'side'
        new Ext.Viewport({
            title: "Viewport",
            layout: "border",
            defaults: {
                bodyStyle: "background-color: #FFFFFF;",
            },
            items: [
                        {
                            region: 'west',
                            title: '组织机构',
                            xtype: 'treepanel',
                            id: "orgtree",
                            width: 200,
                            autoScroll: true,
                            loader: new Ext.tree.TreeLoader({
                                url: '/Api/Organization/GetOrganizationsAndUser?id=null'
                            }),
                            root: new Ext.tree.AsyncTreeNode({
                                expanded: true,
                            }),
                            rootVisible: false,
                            listeners: {
                                click: function (n) {

                                    if (n.attributes.attributes.Type == "user") {
                                        form2.form.load({
                                            url: '@Url.Content("/Api/User/GetForm/")' + n.id,
                                            method: "Get",
                                            waitMsg: 'Loading',
                                        });

                                        form2.show();
                                        form1.hide();

                                    } else {
                                        form1.form.reset()
                                        form1.form.load({
                                            url: '@Url.Content("/Api/Organization/GetForm/")' + n.id,
                                            method: "Get",
                                            waitMsg: 'Loading',
                                            success: function (form, response) {
                                                // Ext.getCmp("ChargeLeaderIDs").setValue(response.result.data.ChargeLeaderIDs)
                                                //Ext.getCmp("LeaderIDs").setValue(response.result.data.LeaderIDs)
                                            }
                                        });
                                        form1.show();
                                        form2.hide();
                                        Ext.getCmp("addorgbtn").show();
                                        Ext.getCmp("moveorgbtn").show();
                                        Ext.getCmp("adduserbtn").show();
                                        Ext.getCmp("saveorgbtn").show();
                                        Ext.getCmp("returnorgbtn").hide();
                                        Ext.getCmp("removeorgbtn").show();
                                        Ext.getCmp("resetorgbtn").show();

                                    }
                                    Ext.getCmp("panel1").doLayout();
                                }
                            }
                        },
                        {
                            region: "center",
                            id: "panel1",
                            split: true,
                            border: false,
                            collapsible: false,
                            xtype: "panel",
                            layout: "anchor",
                            autoScroll: true,
                            items: [form1, form2]
                            //items: [{
                            //    html: '<iframe id ="contentIframe" frameborder="0" height="100%" width="100%" src="/Admin/Organization/OrganizationManage"></iframe>'
                            //}]
                        }


            ]
        });
        Ext.getCmp("addorgbtn").show();
        Ext.getCmp("moveorgbtn").hide();
        Ext.getCmp("adduserbtn").hide();
        Ext.getCmp("saveorgbtn").show();
        Ext.getCmp("returnorgbtn").hide();
        Ext.getCmp("removeorgbtn").hide();
        Ext.getCmp("resetorgbtn").show();
    });
</script>
